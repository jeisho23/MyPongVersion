import pygame

pygame.init()

#User names
user_1 = input("Enter player_1 name: ")
user_2 = input("Enter player_2 name: ")

#INITIALS
WIDTH, HEIGHT = 1000, 600
wn = pygame.display.set_mode((WIDTH,HEIGHT))
pygame.display.set_caption("My_Pong_Version")
run = True
player_1 = player_2 = 0

#Colors
BLUE = (0,0,255)
RED = (255, 0, 0)
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)

#for the ball
radius = 15
ball_x, ball_y = WIDTH/2 - radius, HEIGHT/2 - radius
ball_vel_x, ball_vel_y = 1.5, 1.5
#paddle dimensions
paddle_width, paddle_height = 20, 120
left_paddle_y = right_paddle_y = HEIGHT/2 - paddle_height/2
left_paddle_x, right_paddle_x = 100 - paddle_width/2, WIDTH - (100 - paddle_width/2)
right_paddle_vel, left_paddle_vel = 0, 0

#Main Loop
while run:
    wn.fill(BLACK)
    for i in pygame.event.get():
        if i.type == pygame.QUIT:
            run = False
        elif i.type == pygame.KEYDOWN:
            if i.key == pygame.K_UP:
                right_paddle_vel = -0.9
            if i.key == pygame.K_DOWN:
                right_paddle_vel = 0.9
            if i.key == pygame.K_w:
                left_paddle_vel = -0.9
            if i.key == pygame.K_s:
                left_paddle_vel = 0.9
        
        if i.type == pygame.KEYUP:
            right_paddle_vel = 0
            left_paddle_vel = 0

    #ball's movement
        #change direction vertically
    if ball_y <= 0 + radius or ball_y >= HEIGHT - radius:
        ball_vel_y *= -1
        #check if ball goes out right and resets to next player serve (left)
    if ball_x >= WIDTH - radius:
        player_1 += 1
        ball_x, ball_y = WIDTH/2 - radius, HEIGHT/2 - radius
        ball_vel_x *= -1
        ball_vel_y *= -1
        #check if ball goes out left and resets to next player serve (right)
    if ball_x <= 0 + radius:
        player_2 += 1
        ball_x, ball_y = WIDTH/2 - radius, HEIGHT/2 - radius
        ball_vel_x, ball_vel_y = 1.5, 1.5

    #paddle movements-keeps paddles from moving off screen
    if left_paddle_y >= HEIGHT - paddle_height:
        left_paddle_y = HEIGHT - paddle_height
    if left_paddle_y <= 0:
        left_paddle_y = 0
    if right_paddle_y >= HEIGHT - paddle_height:
        right_paddle_y = HEIGHT - paddle_height
    if right_paddle_y <= 0:
        right_paddle_y = 0

    #collisions
    #left paddle
    if left_paddle_x <= ball_x <= left_paddle_x + paddle_width:
        if left_paddle_y <= ball_y <= left_paddle_y + paddle_height:
            ball_x = left_paddle_x + paddle_width
            ball_vel_x *= -1
    #right paddle
    if right_paddle_x <= ball_x <= right_paddle_x + paddle_width:
        if right_paddle_y <= ball_y <= right_paddle_y + paddle_height:
            ball_x = right_paddle_x
            ball_vel_x *= -1

    #movements      
    ball_x += ball_vel_x
    ball_y += ball_vel_y
    right_paddle_y += right_paddle_vel
    left_paddle_y += left_paddle_vel

    #scoreboard
    font = pygame.font.SysFont('callibri', 32)
    score_1 = font.render(str(user_1)+": " + str(player_1), True, WHITE)
    wn.blit(score_1, (25,25))
    score_2 = font.render(str(user_2)+": " + str(player_2), True, WHITE)
    wn.blit(score_2, (825,25))

    #Objects
    pygame.draw.circle(wn, BLUE, (ball_x, ball_y), radius)
    pygame.draw.rect(wn, RED, pygame.Rect(left_paddle_x, left_paddle_y, paddle_width, paddle_height))
    pygame.draw.rect(wn, RED, pygame.Rect(right_paddle_x, right_paddle_y, paddle_width, paddle_height))

    #end
    win_font = pygame.font.SysFont('callibri', 100)
    if player_1 >= 3:
        wn.fill(BLACK)
        endscreen = win_font.render(str(user_1)+" WON!!!! :)", True, WHITE)
        wn.blit(endscreen, (200, 250))
        pygame.display.update()
        pygame.time.delay(2000)
        run = False

    if player_2 >= 3:
        wn.fill(BLACK)
        endscreen = win_font.render(str(user_2)+" WON!!!! :)", True, WHITE)
        wn.blit(endscreen, (200, 250))
        pygame.display.update()
        pygame.time.delay(2000)
        run = False

    pygame.display.update()